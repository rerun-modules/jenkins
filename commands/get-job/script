#!/usr/bin/env bash
#
#/ command: jenkins:get-job: "Get a job's configuration file using the web API"
#
#/ usage: rerun jenkins:get-job [ --file <>]  --jobname <> [ --jenkins-url <http://localhost:8080>] [ --username <>] [ --password <>] 
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: FILE JOBNAME JENKINS_URL USERNAME PASSWORD

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/get-job/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/get-job/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die "*** command failed: jenkins:get-job. ***"' ERR
set -o nounset -o pipefail

# ------------------------------
# Your implementation goes here.
# ------------------------------

curlAuth=
if [ -n "${USERNAME}" -a -n "${PASSWORD}" ]
then
   curlAuth="-u ${USERNAME}:${PASSWORD}"
fi

curl "${curlAuth}" -fs  "${JENKINS_URL}/job/${JOBNAME}/config.xml" | xmlstarlet fo > ${FILE}

exit $?

# Done
