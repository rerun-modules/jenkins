#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: jenkins:install-plugin: "Install plugin from the web"
#/ usage: rerun jenkins:install-plugin [ --restart|-r <false>] [ --jenkins-home </var/lib/jenkins>] [ --plugin-url|-p <http://updates.jenkins-ci.org>]  --plugin-name|-p <> [ --plugin-version|-p <latest>] [ --jenkins-url <http://localhost:8080>] [ --force <false>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh install-plugin || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: jenkins:install-plugin. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: RESTART JENKINS_HOME PLUGIN_URL PLUGIN_NAME PLUGIN_VERSION JENKINS_URL FORCE

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

if [[ -d "${JENKINS_HOME}/plugins" ]]
then
  cd ${JENKINS_HOME}/plugins
else
  exit 1
fi

if [[ ! -e ${PLUGIN_NAME}.hpi || $FORCE = "true" ]]
then
  sudo -u jenkins wget --quiet -O ${PLUGIN_NAME}.hpi ${PLUGIN_URL}/download/plugins/${PLUGIN_NAME}/${PLUGIN_VERSION}/${PLUGIN_NAME}.hpi

  if [[ "${RESTART}" = "true" ]]
  then
    rerun jenkins:restart
  fi
fi

exit $?

# Done
